apiVersion: v1
kind: Secret
metadata:  
  name: bold-license-key
  namespace: bold-services
type: Opaque
stringData:
  #  The Bold BI licnece key which you have purchesed.
  BOLD_SERVICES_UNLOCK_KEY: ""
---
apiVersion: v1
kind: Secret
metadata:  
  name: bold-user-secret
  namespace: bold-services
type: Opaque
stringData:
  # It should be a valid email.
  BOLD_SERVICES_USER_EMAIL: ""

  # It should meet our password requirements.
  BOLD_SERVICES_USER_PASSWORD: ""
---
apiVersion: v1
kind: Secret
metadata:  
  name: bold-db-secret
  namespace: bold-services
type: Opaque
stringData:
  # Type of database server can be used for configuring the Bold BI. Eg: mssql, mysql and postgresql
  BOLD_SERVICES_DB_TYPE: ""

  # Name of the Database Server
  BOLD_SERVICES_DB_HOST: ""

  # The system will use the following default port numbers based on the database server type.
  # PostgrSQL â€“ 5234 and MySQL -3306
  # Please specify the port number for your database server if it is configured on a different port.
  # For MS SQL Server, this parameter is not necessary.
  BOLD_SERVICES_DB_PORT: ""

  # Username for the database server
  # Please refer to this documentation for information on the user's permissions.
  # https://help.boldbi.com/embedded-bi/faq/what-are-the-database-permissions-required-to-set-up-bold-bi-embedded/
  BOLD_SERVICES_DB_USER: ""

  # The database user's password
  BOLD_SERVICES_DB_PASSWORD: ""

  # If the database name is not specified, the system will create a new database called bold services.
  # If you specify a database name, it should already exist on the server.
  BOLD_SERVICES_DB_NAME: ""

  # For PostgreSQL DB Servers, this is an optional parameter.
  # The system will use the database name postgres by default.
  # If your database server uses a different default database, please provide it here.
  BOLD_SERVICES_POSTGRESQL_MAINTENANCE_DB: ""

  # If your database server requires additional connection string parameters, include them here
  # Connection string parameters can be found in the official document.
  # My SQL: https://dev.mysql.com/doc/connector-net/en/connector-net-8-0-connection-options.html
  # PostgreSQL: https://www.npgsql.org/doc/connection-string-parameters.html
  # MS SQL: https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlconnection.connectionstring
  # Note: A semicolon(;) should be used to separate multiple parameters.
  BOLD_SERVICES_DB_ADDITIONAL_PARAMETERS: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: branding-config
  namespace: bold-services
# All the branding images variables are accepted as URL.
# Image type: png, svg, jpg, jpeg
# Ex: https://example.com/loginlogo.jpg
data:
  # This is the header logo for the application, and the preferred image size is 40 x 40 pixels.
  BOLD_SERVICES_BRANDING_MAIN_LOGO: ""
  
  # This is the login logo for the application, and the preferred image size is 200 x 40 pixels.
  BOLD_SERVICES_BRANDING_LOGIN_LOGO: ""
  
  # This is an email logo, and the preferred image size is 200 x 40 pixels.
  BOLD_SERVICES_BRANDING_EMAIL_LOGO: ""
  
  # This is a favicon, and the preferred image size is 40 x 40 pixels.
  BOLD_SERVICES_BRANDING_FAVICON: ""
  
  # This is powered by the logo, and the preferred size is 100 x 25 pixels.
  BOLD_SERVICES_BRANDING_FOOTER_LOGO: ""
  
  # This is organization name.
  BOLD_SERVICES_SITE_NAME: ""
  
  # This is site identifier, and it will be the part of the application URL.
  BOLD_SERVICES_SITE_IDENTIFIER: ""

  # Note: If you want to use the custom branding, provide the value for all branding variables 
  # If all variable values are given, application will use the branding images,
  # otherwise it will take the default logos.
---
apiVersion: v1
kind: Secret
metadata:
  name: bold-secret
  namespace: bold-services
type: Opaque
stringData:
  widget_bing_map_enable_secret: ""
  widget_bing_map_api_key_secret: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: log4net-config
  namespace: bold-services
data:
  Log4Net.config: |
    <?xml version="1.0" encoding="utf-8" ?>
    <configuration>
      <log4net threshold="ALL">
        <root>
          <level value="ALL" />
           <!-- <appender-ref ref="ConsoleAppender" /> -->
          <appender-ref ref="FILE_DEBUG_APPENDER" />
          <appender-ref ref="FILE_ERROR_APPENDER" />
        </root>
        <!-- === File Appender for NON-ERROR messages file === -->
        <appender name="FILE_DEBUG_APPENDER" type="log4net.Appender.RollingFileAppender" class="ch.qos.logback.classic.AsyncAppender">
          <file type="log4net.Util.PatternString" value="%property{AppDataPath}/logs/%property{loggername}/debug-info-%env{HOSTNAME}.txt" />
          <filter type="log4net.Filter.LevelMatchFilter">
            <levelToMatch value="INFO" />
          </filter>
          <filter type="log4net.Filter.DenyAllFilter" />
          <additivity value="true" />
          <appendToFile value="true" />
          <maxSizeRollBackups value="1" />
          <maximumFileSize value="300KB" />
          <rollingStyle value="Size" />
          <staticLogFileName value="true" />
          <layout type="log4net.Layout.PatternLayout">
            <header type="log4net.Util.PatternString" value="#Software: %property{loggername} %newline#Date: %date %newline#Fields: date thread namespace methodname message %newline" />
            <conversionPattern value="%date	[%thread]	%message%newline" />
          </layout>
        </appender>
        <!-- === File Appender for ERROR messages file === -->
        <appender name="FILE_ERROR_APPENDER" type="log4net.Appender.RollingFileAppender" class="ch.qos.logback.classic.AsyncAppender">
          <file type="log4net.Util.PatternString" value="%property{AppDataPath}/logs/%property{loggername}/errors-%env{HOSTNAME}.txt" />
          <filter type="log4net.Filter.LevelMatchFilter">
            <levelToMatch value="ERROR" />
          </filter>
          <filter type="log4net.Filter.DenyAllFilter" />
          <additivity value="true" />
          <appendToFile value="true" />
          <maxSizeRollBackups value="10" />
          <maximumFileSize value="100KB" />
          <rollingStyle value="Size" />
          <staticLogFileName value="true" />
          <layout type="log4net.Layout.PatternLayout">
            <header type="log4net.Util.PatternString" value="#Software: %property{loggername} %newline#Date: %date %newline#Fields: date thread namespace methodname message %newline" />
            <conversionPattern value="%date	[%thread]	%-5level	%message%newline" />
          </layout>
        </appender>
        <!-- === Console Appender to use in BufferingForwardingAppender === -->
        <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern type="log4net.Util.PatternString" value="%newline%%-5level  %property{loggername}  %env{HOSTNAME}  %%date	[%%thread]	%%message%newline" />
          </layout>
        </appender>  
      </log4net>
    </configuration>
    
