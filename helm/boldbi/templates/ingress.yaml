{{- if eq .Values.loadBalancer.type "nginx" }}
{{- $ingressApiIsStable := eq (include "ingress.isStable" .) "true" -}}
{{- $ingressSupportsIngressClassName := eq (include "ingress.supportsIngressClassName" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "ingress.supportsPathType" .) "true" -}}
{{- $ingressPathType := "ImplementationSpecific" -}}
apiVersion: {{ template "ingress.apiVersion" . }}
kind: Ingress
metadata:
  labels:
    {{- include "boldbi.labels" . | nindent 4 }}
  name: bold-ingress
{{- include "boldbi.namespace" . | nindent 2 }}
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: "bold.k8s.pod.id"
    nginx.ingress.kubernetes.io/session-cookie-max-age: '600'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers: "256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "16k"
    nginx.ingress.kubernetes.io/fastcgi-buffers: "16k"
    nginx.ingress.kubernetes.io/fastcgi-buffer-size: "32k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  {{- if and $ingressSupportsIngressClassName .Values.loadBalancer.ingressClassName }}
  ingressClassName: {{ .Values.loadBalancer.ingressClassName }}
  {{- else if $ingressSupportsIngressClassName }}
  ingressClassName: nginx
  {{- end }}
  {{- if eq (split ":" .Values.appBaseUrl)._0 "https" }}
  tls:
    {{- if .Values.loadBalancer.multipleHost }}
    {{- range $host := .Values.loadBalancer.multipleHost.hostArray }}
    - hosts:
        {{- range $dns := $host.hosts }}
        - {{ $dns }}
        {{- end }}
      secretName: {{ $host.secretName }}
    {{- end }}
    {{- else }}
    - hosts:
        - {{ (split "/" .Values.appBaseUrl)._2 }}
      secretName: {{ .Values.loadBalancer.singleHost.secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- if .Values.loadBalancer.multipleHost }}
    {{- range $host := .Values.loadBalancer.multipleHost.hostArray }}
    {{- range $dns := $host.hosts }}
    - host: {{ $dns }}
      http:
        paths:
          - path: "/bi/api/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-api-service
                port:
                  number: 6005
          - path: "/bi/jobs/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-jobs-service
                port:
                  number: 6006
          - path: "/bi/designer/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-dataservice-service
                port:
                  number: 6007
          - path: "/bi/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-web-service
                port:
                  number: 6004
          - path: "/api/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-api-service
                port:
                  number: 6001
          - path: "/ums/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-ums-service
                port:
                  number: 6002
          - path: "/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-web-service
                port:
                  number: 6000
    {{- end }}
    {{- end }}
    {{- else }}
    - host: {{ (split "/" .Values.appBaseUrl)._2 }}
      http:
        paths:
          - path: "/bi/api/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-api-service
                port:
                  number: 6005
          - path: "/bi/jobs/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-jobs-service
                port:
                  number: 6006
          - path: "/bi/designer/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-dataservice-service
                port:
                  number: 6007
          - path: "/bi/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: bi-web-service
                port:
                  number: 6004
          - path: "/api/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-api-service
                port:
                  number: 6001
          - path: "/ums/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-ums-service
                port:
                  number: 6002
          - path: "/*"
            pathType: {{ $ingressPathType }}
            backend:
              service:
                name: id-web-service
                port:
                  number: 6000
    {{- end }}
{{- end }}

# {{- if eq .Values.loadBalancer.type "nginx" }}
{{- $ingressSupportsIngressClassName := eq (include "ingress.supportsIngressClassName" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "ingress.supportsPathType" .) "true" -}}
{{- $ingressPathType := "ImplementationSpecific" -}}
apiVersion: {{ template "ingress.apiVersion" . }}
kind: Ingress
metadata:
  labels:
    {{- include "boldbi.labels" . | nindent 4 }}
  name: bold-ingress-etl
  {{- include "boldbi.namespace" . | nindent 2 }}
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: "bold.k8s.pod.id"
    nginx.ingress.kubernetes.io/session-cookie-max-age: '600'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers: "256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "16k"
    nginx.ingress.kubernetes.io/fastcgi-buffers: "16k"
    nginx.ingress.kubernetes.io/fastcgi-buffer-size: "32k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  {{- if and $ingressSupportsIngressClassName .Values.loadBalancer.ingressClassName }}
  ingressClassName: {{ .Values.loadBalancer.ingressClassName }}
  {{- end }}
  {{- if eq (split ":" .Values.appBaseUrl)._0 "https" }}
  tls:
    {{- if .Values.loadBalancer.multipleHost }}
    {{- range $host := .Values.loadBalancer.multipleHost.hostArray }}
    - hosts:
        {{- range $dns := $host.hosts }}
        - {{ $dns }}
        {{- end }}
      secretName: {{ $host.secretName }}
    {{- end }}
    {{- else }}
    - hosts:
        - {{ (split "/" .Values.appBaseUrl)._2 }}
      secretName: {{ .Values.loadBalancer.singleHost.secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- if .Values.loadBalancer.multipleHost }}
    {{- range $host := .Values.loadBalancer.multipleHost.hostArray }}
    {{- range $dns := $host.hosts }}
    - host: {{ $dns }}
      http:
        paths:
        - path: "/etlservice(/|$)(.*)"
          pathType: {{ $ingressPathType }}
          backend:
            service:
              name: bold-etl-service
              port:
                number: 6009
    {{- end }}
    {{- end }}
    {{- else }}
    - host: {{ (split "/" .Values.appBaseUrl)._2 }}
      http:
        paths:
        - path: "/etlservice(/|$)(.*)"
          pathType: {{ $ingressPathType }}
          backend:
            service:
              name: bold-etl-service
              port:
                number: 6009
    {{- end }}
{{- end }}

