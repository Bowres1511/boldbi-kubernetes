{{- range $service := .Values.instanceConfig}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: {{ $.Chart.Name }}_{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ $service.app }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- if $.Chart.AppVersion }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  name: {{ $service.app }}-deployment
  {{- if eq $.Release.Namespace "default" }}
  namespace: {{ $.Values.namespace.name }}
  {{- else }}
  namespace: {{ $.Release.Namespace }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.app }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  replicas: {{ $service.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.app }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- if ne $service.app "id-web" }}
      initContainers:
      - name: id-web-initialization
        image: busybox:1.28
        command: ["/bin/sh","-c"]
        args: ["if [ ! -f /application/app_data/configuration/config.xml ]; then echo waiting for id-web; sleep 5; else echo config.xml file exist; fi"]
        volumeMounts:
        - mountPath: /application/app_data
          name: {{ $service.app }}-volume
      {{- end }}
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ $.Values.imagePullSecrets }}
      {{- end }}
      containers:
      - name: {{ $service.app }}-container
        {{- if eq $service.app "id-web" }}
        image: "{{ $.Values.image.idRepo }}/bold-identity:{{ $.Values.image.idTag }}"
        {{- else if eq $service.app "id-api" }}
        image: "{{ $.Values.image.idRepo }}/bold-identity-api:{{ $.Values.image.idTag }}"
        {{- else if eq $service.app "id-ums" }}
        image: "{{ $.Values.image.idRepo }}/bold-ums:{{ $.Values.image.idTag }}"
        {{- else if eq $service.app "bi-web" }}
        image: "{{ $.Values.image.biRepo }}/boldbi-server:{{ $.Values.image.biTag }}"
        {{- else if eq $service.app "bi-api" }}
        image: "{{ $.Values.image.biRepo }}/boldbi-server-api:{{ $.Values.image.biTag }}"
        {{- else if eq $service.app "bi-jobs" }}
        image: "{{ $.Values.image.biRepo }}/boldbi-server-jobs:{{ $.Values.image.biTag }}"
        {{- else if eq $service.app "bi-dataservice" }}
        image: "{{ $.Values.image.biRepo }}/boldbi-designer:{{ $.Values.image.biTag }}"
        {{- else if eq $service.app "bold-etl" }}
        image: "{{ $.Values.image.biRepo }}/bold-etl:{{ $.Values.image.tag }}"
        {{- else if eq $service.app "reports-web" }}
        image: "{{ $.Values.image.reportsRepo }}/boldreports-server:{{ $.Values.image.reportsTag }}"
        {{- else if eq $service.app "reports-api" }}
        image: "{{ $.Values.image.reportsRepo }}/boldreports-server-api:{{ $.Values.image.reportsTag }}"
        {{- else if eq $service.app "reports-jobs" }}
        image: "{{ $.Values.image.reportsRepo }}/boldreports-server-jobs:{{ $.Values.image.reportsTag }}"
        {{- else if eq $service.app "reports-reportservice" }}
        image: "{{ $.Values.image.reportsRepo }}/boldreports-designer:{{ $.Values.image.reportsTag }}"
        {{- else if eq $service.app "reports-viewer" }}
        image: "{{ $.Values.image.reportsRepo }}/boldreports-viewer:{{ $.Values.image.reportsTag }}"
        {{- end }}
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: {{ $service.cpuResourceRequests }}
            memory: {{ $service.memoryResourceRequests }}
        {{- if ne $service.product "boldreports" }}
        env:
        - name: BOLD_SERVICES_HOSTING_ENVIRONMENT
          value: k8s
        {{- if eq $service.app "id-web" }}
        - name: APP_BASE_URL
          value: {{ $.Values.appBaseUrl }}
        {{- if $.Values.optionalLibs }}
        - name: INSTALL_OPTIONAL_LIBS
          value: {{ $.Values.optionalLibs }}
        - name: ID_Version
          value: {{ $.Values.versions.idp }}
        - name: BI_Version
          value: {{ $.Values.versions.bi }}
        - name: Reports_Version
          value: {{ $.Values.versions.reports }}
        - name: Is_Common_IDP
          value: "true"
        {{- end }}
        {{- else if eq $service.app "bi-dataservice" }}
        - name: AppSettings__CustomSizePDFExport
          value: "{{ $.Values.customSizePdfExport.enable }}"
        - name: AppSettings__BrowserTimezone
          value: "{{ $.Values.browserTimeZone.enable }}"
        {{- if $.Values.bingMapWidget.enabled }}
        - name: widget_bing_map_enable
          valueFrom:
            secretKeyRef:
              {{- if $.Values.bingMapWidget.bingMapSecretName }}
              name: {{ $.Values.bingMapWidget.bingMapSecretName }}
              {{- else }}
              name: bold-secret
              {{- end }}
              key: widget_bing_map_enable_secret
        - name: widget_bing_map_api_key
          valueFrom:
            secretKeyRef:
              {{- if $.Values.bingMapWidget.bingMapSecretName }}
              name: {{ $.Values.bingMapWidget.bingMapSecretName }}
              {{- else }}
              name: bold-secret
              {{- end }}
              key: widget_bing_map_api_key_secret
        {{- end }}
        {{- end }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /health-check
            port: 80
          {{- if or (eq $service.app "id-web") (eq $service.app "bi-web") (eq $service.app "id-api") }}
          initialDelaySeconds: 30
          {{- else }}
          initialDelaySeconds: 40
          {{- end }}
          periodSeconds: 15
          timeoutSeconds: 30
        volumeMounts:
        {{- if or (eq $service.product "boldid") (eq $service.product "boldbi") }}
        - mountPath: /application/app_data
          name: {{ $service.app }}-volume
        {{- if eq $service.app "id-web" }}
        - mountPath: /application/idp/web/logs/k8s
        {{- else if eq $service.app "id-api" }}
        - mountPath: /application/idp/api/logs/k8s
        {{- else if eq $service.app "id-ums" }}
        - mountPath: /application/idp/ums/logs/k8s
        {{- else if eq $service.app "bi-web" }}
        - mountPath: /application/bi/web/logs/k8s
        {{- else if eq $service.app "bi-api" }}
        - mountPath: /application/bi/api/logs/k8s
        {{- else if eq $service.app "bi-jobs" }}
        - mountPath: /application/bi/jobs/logs/k8s
        {{- else if eq $service.app "bi-dataservice" }}
        - mountPath: /application/bi/dataservice/logs/k8s
        {{- else if eq $service.app "bold-etl" }}
        - mountPath: /application/etl/etlservice/logs/k8s
        {{- end }}
        {{- else if eq $service.product "boldreports" }}
        - mountPath: /application/app_data
          name: {{ $service.app }}-volume
        {{- if eq $service.app "reports-web" }}
        - mountPath: /application/reporting/web/logs
        {{- else if eq $service.app "reports-api" }}
        - mountPath: /application/reporting/api/logs
        {{- else if eq $service.app "reports-jobs" }}
        - mountPath: /application/reporting/jobs/logs
        {{- else if eq $service.app "reports-viewer" }}
        - mountPath: /application/reporting/viewer/logs
        {{- else if eq $service.app "reports-reportservice" }}
        - mountPath: /application/reporting/reportservice/logs
        {{- end }}
        {{- end }}
          name: log4net-config-volume
      volumes:
      - name: {{ $service.app }}-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.persistentVolume.name }}-claim
          readOnly: false
      - name: log4net-config-volume
        configMap:
          name: log4net-config
---
{{- end }}
